• What will be printed?
Meow. I am a cat. My name is Kurre
and I am 6 years old.
Meow. I am a cat. My name is Vilma
and I am 3 years old.

• Explain how it is that the instance variable age of Animal can be used in Cat and Dog when it is declared in Animal.
Because inheritance will inherit all the variable from  parent class,Animal to subclasses,Cat and Dog.

• What actually consists an instance of?
Object kurre and vilma contains an instance of Cat and Dog respectively.

• And what consists a class of?
A class is nothing but a blueprint or a template for creating different objects which defines its properties and behaviors. A class is consists of fields and methods to describe the behavior of an object.


• What is the difference between a class and an instance?
An instance declared in a class, but outside a method, constructor or any block.
A class declared with the static keyword in a class, but outside a method, constructor or a block.

• Change the declaration of the instance variable age of Animal to a class variable using static, in this way:
public static int age;
• What is the result of the output now? Why?
OUTPUT:
Meow. I am a cat. My name is Kurre
and I am 3 years old.
Meow. I am a cat. My name is Vilma
and I am 3 years old.
This is because a static variable only can be access once.Thus, only a single instance of it exists and shared between all objects of the same class.


• It may happen that you get warnings from the compiler that you should access the variable age via Animal.age, but it should be possible to run the program anyway. Otherwise, change the references to age into Animal.age.
• Where is the value of an instance variable stored?
Instance variables were stored under the class it was defined in. For example, the kurre and vilma instance variables were defined in the main method of class Lab1Stage2. Therefore, the varibles belongs to the scope of main method inside Lab1Stage2 class.


• Where is the value of a class variable stored?
The value of a class variable also stored in heap.

• What refers the variable this to?
The keyword this refers to the class itself. If two variables or methods with the same name are used, this keyword will make sure the current class version of the two will be used instead.
